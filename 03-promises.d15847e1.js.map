{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAKP,IAAMQ,EAAO,CACXR,MAAOS,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,IAAKJ,SAASC,cAAc,UAG9BF,EAAKR,MAAMc,aAAa,MAAO,GAC/BN,EAAKG,KAAKG,aAAa,MAAO,GAC9BN,EAAKI,OAAOE,aAAa,MAAO,GAEhCN,EAAKK,IAAIE,iBAAiB,UAAU,SAAAC,GAClCA,EAAIC,iBAON,SAAwBjB,EAAOW,EAAMC,GACnC,IAAK,IAAIM,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChCpB,EAAcoB,EAAGlB,GACdmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANH,EAAM,MAAK,CAC9DI,QAAO,K,IAGZC,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALpB,MAClBJ,EAAA0B,OAAOK,QAAQ,sBAAqCH,OAAfzB,EAAS,QAAYyB,OAANH,EAAM,MAAK,CAC7DI,QAAS,K,IAGfzB,GAASW,C,CAhBXiB,CAHYC,OAAOrB,EAAKR,MAAM8B,OACjBD,OAAOrB,EAAKG,KAAKmB,OACfD,OAAOrB,EAAKI,OAAOkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  btn: document.querySelector('.form'),\n};\n\nrefs.delay.setAttribute('min', 0);\nrefs.step.setAttribute('min', 0);\nrefs.amount.setAttribute('min', 0);\n\nrefs.btn.addEventListener('submit', evt => {\n  evt.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n  createPromises(delay, step, amount);\n});\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","document","querySelector","step","amount","btn","setAttribute","addEventListener","evt","preventDefault","i","then","param","_$delay","Notify","success","concat","timeout","catch","failure","$ce04d3a99e08e73b$var$createPromises","Number","value"],"version":3,"file":"03-promises.d15847e1.js.map"}